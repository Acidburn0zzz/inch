{
    "args": [],
    "branch_name": "master",
    "client_name": "inchjs",
    "client_version": "0.4.0",
    "git_repo_url": "git@github.com:inch-ci/Hello-World-NodeJS.git",
    "language": "javascript",
    "objects": [
        {
            "comment": "",
            "kind": "function",
            "longname": "InstanciatableClass",
            "meta": {
                "code": {
                    "id": "astnode100000004",
                    "name": "InstanciatableClass",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 4,
                "path": "/src",
                "range": [
                    20,
                    55
                ]
            },
            "name": "InstanciatableClass",
            "scope": "global",
            "undocumented": true
        },
        {
            "comment": "",
            "kind": "function",
            "longname": "InstanciatableClass#render",
            "memberof": "InstanciatableClass",
            "meta": {
                "code": {
                    "id": "astnode100000009",
                    "name": "InstanciatableClass.prototype.render",
                    "paramnames": [],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 5,
                "path": "/src",
                "range": [
                    57,
                    125
                ]
            },
            "name": "render",
            "scope": "instance",
            "undocumented": true
        },
        {
            "access": "private",
            "comment": "/**\n* @private\n*/",
            "kind": "function",
            "longname": "InchTest.generate_docs",
            "memberof": "InchTest",
            "meta": {
                "code": {
                    "id": "astnode100000024",
                    "name": "InchTest.generate_docs",
                    "paramnames": [
                        "project",
                        "version",
                        "args",
                        "options"
                    ],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 14,
                "path": "/src",
                "range": [
                    166,
                    235
                ]
            },
            "name": "generate_docs",
            "scope": "static"
        },
        {
            "comment": "// Generate JSON documentation for the given modules",
            "kind": "function",
            "longname": "InchTest.Docs.Formatter.run",
            "memberof": "InchTest.Docs.Formatter",
            "meta": {
                "code": {
                    "id": "astnode100000042",
                    "name": "run",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 19,
                "path": "/src",
                "range": [
                    333,
                    398
                ]
            },
            "name": "run",
            "scope": "static",
            "undocumented": true
        },
        {
            "comment": "/*\n* @ignore\n*/",
            "kind": "function",
            "longname": "InchTest.Docs.Formatter.nodoc_ignore",
            "memberof": "InchTest.Docs.Formatter",
            "meta": {
                "code": {
                    "id": "astnode100000050",
                    "name": "nodoc_ignore",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 25,
                "path": "/src",
                "range": [
                    434,
                    463
                ]
            },
            "name": "nodoc_ignore",
            "scope": "static",
            "undocumented": true
        },
        {
            "comment": "/* istanbul ignore next */",
            "kind": "function",
            "longname": "InchTest.Docs.Formatter.nodoc_istanbul",
            "memberof": "InchTest.Docs.Formatter",
            "meta": {
                "code": {
                    "id": "astnode100000053",
                    "name": "nodoc_istanbul",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 27,
                "path": "/src",
                "range": [
                    500,
                    531
                ]
            },
            "name": "nodoc_istanbul",
            "scope": "static",
            "undocumented": true
        },
        {
            "comment": "/**\n*\n* This function takes `param1` and `param2` as arguments.\n*\n* @param {Number} param1 A number from 0 to 26 that will result in a letter a-z\n* @param {String} param2 A text\n* @return {String} A character from a-z based on the input number n\n*\n* Examples:\n*\n*   > InchTest.Naming.resource_name(MyApp.User)\n*   \"user\"\n*   > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n*   \"user\"\n*/",
            "description": "This function takes `param1` and `param2` as arguments.",
            "kind": "function",
            "longname": "InchTest.Functions.full_doc",
            "memberof": "InchTest.Functions",
            "meta": {
                "code": {
                    "id": "astnode100000063",
                    "name": "InchTest.Functions.full_doc",
                    "paramnames": [
                        "param1",
                        "param2"
                    ],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 47,
                "path": "/src",
                "range": [
                    974,
                    1047
                ]
            },
            "name": "full_doc",
            "params": [
                {
                    "description": "A number from 0 to 26 that will result in a letter a-z",
                    "name": "param1",
                    "type": {
                        "names": [
                            "Number"
                        ]
                    }
                },
                {
                    "description": "A text",
                    "name": "param2",
                    "type": {
                        "names": [
                            "String"
                        ]
                    }
                }
            ],
            "returns": [
                {
                    "description": "A character from a-z based on the input number n\n\nExamples:\n\n  > InchTest.Naming.resource_name(MyApp.User)\n  \"user\"\n  > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n  \"user\"",
                    "type": {
                        "names": [
                            "String"
                        ]
                    }
                }
            ],
            "scope": "static"
        },
        {
            "comment": "/**\n*\n* This function takes a `param1` and a second parameter that is never used\n* (maybe, because it is a callback or something like that). However, the\n* second param should impact the evaluation by Inch.\n*\n* Examples:\n*\n*   > InchTest.Naming.resource_name(MyApp.User)\n*   \"user\"\n*   > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n*   \"user\"\n*/",
            "description": "This function takes a `param1` and a second parameter that is never used\n(maybe, because it is a callback or something like that). However, the\nsecond param should impact the evaluation by Inch.\n\nExamples:\n\n  > InchTest.Naming.resource_name(MyApp.User)\n  \"user\"\n  > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n  \"user\"",
            "kind": "function",
            "longname": "InchTest.Functions.full_doc_second_parameter_unnamed",
            "memberof": "InchTest.Functions",
            "meta": {
                "code": {
                    "id": "astnode100000076",
                    "name": "InchTest.Functions.full_doc_second_parameter_unnamed",
                    "paramnames": [
                        "param1",
                        "_"
                    ],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 63,
                "path": "/src",
                "range": [
                    1404,
                    1497
                ]
            },
            "name": "full_doc_second_parameter_unnamed",
            "scope": "static"
        },
        {
            "access": "public",
            "comment": "/**\n* Creates and returns a new MultiRedisClient instance.\n*\n* @function\n* @memberof! MultiRedisClient\n* @public\n* @param {redis|Array} clients - The redis client/s\n* @returns {MultiRedisClient} The multiple redis client instance\n* @example\n* ```js\n* //create multiple redis clients\n* var redis = require('redis');\n* var client1 = redis.createClient(...);\n* var client2 = redis.createClient(...);\n*\n* //create the wrapper client\n* var MultipleRedis = require('multiple-redis');\n* var multiClient = MultipleRedis.createClient([client1, client2]);\n*\n* //run any command on the multi client instead of the original clients\n* multiClient.set('string key', 'string val', callback);\n* ```\n*\n*",
            "description": "Creates and returns a new MultiRedisClient instance.",
            "examples": [
                "```js\n//create multiple redis clients\nvar redis = require('redis');\nvar client1 = redis.createClient(...);\nvar client2 = redis.createClient(...);\n\n//create the wrapper client\nvar MultipleRedis = require('multiple-redis');\nvar multiClient = MultipleRedis.createClient([client1, client2]);\n\n//run any command on the multi client instead of the original clients\nmultiClient.set('string key', 'string val', callback);\n```"
            ],
            "forceMemberof": true,
            "kind": "function",
            "longname": "MultiRedisClient.InchTest.Functions.multiple_signatures",
            "memberof": "MultiRedisClient",
            "meta": {
                "code": {
                    "id": "astnode100000089",
                    "name": "InchTest.Functions.multiple_signatures",
                    "paramnames": [],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 115,
                "path": "/src",
                "range": [
                    3015,
                    3082
                ]
            },
            "name": "InchTest.Functions.multiple_signatures",
            "params": [
                {
                    "description": "The redis client/s",
                    "name": "clients",
                    "type": {
                        "names": [
                            "redis",
                            "Array"
                        ]
                    }
                }
            ],
            "returns": [
                {
                    "description": "The multiple redis client instance",
                    "type": {
                        "names": [
                            "MultiRedisClient"
                        ]
                    }
                }
            ],
            "scope": "static"
        },
        {
            "access": "public",
            "comment": "\n*\n* @function\n* @memberof! MultiRedisClient\n* @public\n* @param {Array} connectionInfo - The redis client/s connection info\n* @param {string} connectionInfo.host - The redis host\n* @param {number} connectionInfo.post - The redis port\n* @param {Array} [options] - Used when this client creates the redis clients\n* @returns {MultiRedisClient} The multiple redis client instance\n* @example\n* ```js\n* //create the wrapper client with connection info\n* var MultipleRedis = require('multiple-redis');\n* var multiClient = MultipleRedis.createClient([{\n*   host: 'host1',\n*   port: 6379\n* }, {\n*   host: 'host2',\n*   port: 6379\n* }], options);\n*\n* //run any command on the multi client instead of the original clients\n* multiClient.set('string key', 'string val', callback);\n* ```\n*/",
            "examples": [
                "```js\n//create the wrapper client with connection info\nvar MultipleRedis = require('multiple-redis');\nvar multiClient = MultipleRedis.createClient([{\n  host: 'host1',\n  port: 6379\n}, {\n  host: 'host2',\n  port: 6379\n}], options);\n\n//run any command on the multi client instead of the original clients\nmultiClient.set('string key', 'string val', callback);\n```"
            ],
            "forceMemberof": true,
            "kind": "function",
            "longname": "MultiRedisClient.InchTest.Functions.multiple_signatures",
            "memberof": "MultiRedisClient",
            "meta": {
                "code": {
                    "id": "astnode100000089",
                    "name": "InchTest.Functions.multiple_signatures",
                    "paramnames": [],
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 115,
                "path": "/src",
                "range": [
                    3015,
                    3082
                ]
            },
            "name": "InchTest.Functions.multiple_signatures",
            "params": [
                {
                    "description": "The redis client/s connection info",
                    "name": "connectionInfo",
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                },
                {
                    "description": "The redis host",
                    "name": "connectionInfo.host",
                    "type": {
                        "names": [
                            "string"
                        ]
                    }
                },
                {
                    "description": "The redis port",
                    "name": "connectionInfo.post",
                    "type": {
                        "names": [
                            "number"
                        ]
                    }
                },
                {
                    "description": "Used when this client creates the redis clients",
                    "name": "options",
                    "optional": true,
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "returns": [
                {
                    "description": "The multiple redis client instance",
                    "type": {
                        "names": [
                            "MultiRedisClient"
                        ]
                    }
                }
            ],
            "scope": "static"
        },
        {
            "comment": "/**\n*\n* This function takes no arguments.\n*\n* Examples:\n*\n*   > InchTest.Naming.resource_name(MyApp.User)\n*   \"user\"\n*   > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n*   \"user\"\n*/",
            "description": "This function takes no arguments.\n\nExamples:\n\n  > InchTest.Naming.resource_name(MyApp.User)\n  \"user\"\n  > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n  \"user\"",
            "kind": "function",
            "longname": "InchTest.CodeExamples.single_code_example",
            "memberof": "InchTest.CodeExamples",
            "meta": {
                "code": {
                    "id": "astnode100000104",
                    "name": "single_code_example",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 129,
                "path": "/src",
                "range": [
                    3325,
                    3381
                ]
            },
            "name": "single_code_example",
            "scope": "static"
        },
        {
            "comment": "/**\n*\n* This function takes no arguments.\n*\n* Examples:\n*\n*   > InchTest.Naming.resource_name(MyApp.User)\n*   \"user\"\n*   > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n*   \"user\"\n*\n* In general, `underscore` can be thought of as the reverse ...\n*\n*   > InchTest.Naming.resource_name(MyApp.User)\n*   \"user\"\n*   > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n*   \"user\"\n*/",
            "description": "This function takes no arguments.\n\nExamples:\n\n  > InchTest.Naming.resource_name(MyApp.User)\n  \"user\"\n  > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n  \"user\"\n\nIn general, `underscore` can be thought of as the reverse ...\n\n  > InchTest.Naming.resource_name(MyApp.User)\n  \"user\"\n  > InchTest.Naming.resource_name(MyApp.UserView, \"View\")\n  \"user\"",
            "kind": "function",
            "longname": "InchTest.CodeExamples.multiple_code_examples",
            "memberof": "InchTest.CodeExamples",
            "meta": {
                "code": {
                    "id": "astnode100000109",
                    "name": "multiple_code_examples",
                    "type": "FunctionExpression",
                    "value": "function"
                },
                "filename": "inch_test.js",
                "lineno": 150,
                "path": "/src",
                "range": [
                    3810,
                    3869
                ]
            },
            "name": "multiple_code_examples",
            "scope": "static"
        }
    ]
}
